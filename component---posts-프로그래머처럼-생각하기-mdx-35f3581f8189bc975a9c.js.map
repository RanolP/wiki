{"version":3,"sources":["webpack://ranolp-wiki/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://ranolp-wiki/./src/components/Layout.tsx","webpack://ranolp-wiki/./src/components/PostLayout.tsx","webpack://ranolp-wiki/./posts/프로그래머처럼 생각하기.mdx"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","Layout","children","Link","to","PostLayout","frontmatter","pageContext","Helmet","title","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+GAAe,SAASA,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,E,oICLM,SAASM,EAAT,GAAyD,IAAvCC,EAAsC,EAAtCA,SAE/B,OACE,gCACE,2BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,WAEDF,GCHQ,SAASG,EAAT,GAGmB,IAFhCH,EAE+B,EAF/BA,SACeI,EACgB,EAD/BC,YAAeD,YAEf,OACE,gBAACL,EAAD,KACE,gBAAC,EAAAO,OAAD,KACE,6BAAWF,EAAYG,MAAvB,cAEF,2BACE,0BAAKH,EAAYG,OAChBP,M,4KCdIQ,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,mBACE,cAAIC,WAAW,MAAf,gBACA,cAAIA,WAAW,MAAf,kBAMNJ,EAAWK,gBAAiB","file":"component---posts-프로그래머처럼-생각하기-mdx-35f3581f8189bc975a9c.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { ReactNode } from 'react';\nimport { Link } from 'gatsby';\n\ntype LayoutProps = {\n  children: ReactNode;\n};\n\nexport default function Layout({ children }: LayoutProps): JSX.Element {\n  // TODO: 검색\n  return (\n    <>\n      <nav>\n        <Link to=\"/\">RanolP</Link>\n      </nav>\n      {children}\n    </>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Layout from './Layout';\n\ntype PostLayoutProps = {\n  children: ReactNode;\n  pageContext: {\n    frontmatter: Record<string, any>;\n  };\n};\n\nexport default function PostLayout({\n  children,\n  pageContext: { frontmatter },\n}: PostLayoutProps): JSX.Element {\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${frontmatter.title} - RanolP`}</title>\n      </Helmet>\n      <div>\n        <h1>{frontmatter.title}</h1>\n        {children}\n      </div>\n    </Layout>\n  );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/wiki/wiki/src/components/PostLayout.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\">{`문제를 분할 정복하기`}</li>\n      <li parentName=\"ul\">{`재현 가능성을 확인하기`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}